plugins {
    alias(libs.plugins.indra.publishing)
    alias(libs.plugins.indra)
    alias(libs.plugins.release)
    alias(libs.plugins.titan)
}

group("net.deltapvp.lunarclient")
description("A server interface for the Lunar Client")

subprojects {
    apply plugin: "net.deltapvp.indra.publishing"
    apply plugin: "net.deltapvp.indra"
    apply plugin: "net.deltapvp.titan"

    repositories {
        mavenCentral()
        maven {
            url("https://repo.deltapvp.net")
        }
    }

    shadowJar {
        def toRelocate = ["io.netty"]

        toRelocate.forEach {
            relocate(it, "net.deltapvp.lunarclient.lib.${it}")
        }
    }

    indra {
        apache2License()
        github("powercasgamer", "LunarClientAPI")
        javaVersions {
            testWith(11)
            target(11)
            minimumToolchain(17)
        }

        configurePublications {
            pom {
                developers {
                    developer {
                        id = "powercas_gamer"
                        timezone = "Europe/Amsterdam"
                    }
                }
            }

            versionMapping {
                usage(Usage.JAVA_API) { fromResolutionOf(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME) }
                usage(Usage.JAVA_RUNTIME) { fromResolutionResult() }
            }
        }

        publishReleasesTo("delta", "https://reposilite.deltapvp.net/releases/")
        publishSnapshotsTo("delta", "https://reposilite.deltapvp.net/snapshots/")
    }

    signing {
        useGpgCmd()
        sign(configurations.archives)
    }
}

release {
    failOnSnapshotDependencies(false)
    preTagCommitMessage("Release: ")
    tagCommitMessage("Release: ")
    newVersionCommitMessage("New Snapshot: ")
    git {
        requireBranch = "master"
        commitVersionFileOnly = false
        signTag = true
    }
}

project.tasks.named("afterReleaseBuild").get().finalizedBy(project.tasks.getByName("publish"))
